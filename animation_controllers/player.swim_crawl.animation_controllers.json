// This file was modified by ambient (ambiennt on discord). Do not use or redistribute this file or its contents without explicit permission from the author.
{
  "format_version": "1.10.0",
  "animation_controllers": {
    "controller.animation.player.compute_swim_crawl_amount_exclusive": {
      "initial_state": "default",
      "states": {
        "default": {
          "transitions": [
            { "swimming": "t.exclusively_swimming = q.is_swimming && !q.is_crawling; return t.exclusively_swimming && (v.swim_amount > 0.0);" },
            { "crawling": "t.exclusively_crawling = !q.is_swimming && q.is_crawling; return t.exclusively_crawling && (v.swim_amount > 0.0);" }
          ]
        },
        "swimming": {
          "transitions": [
            { "default": "v.swim_amount_exclusive = v.swim_amount; t.exclusively_swimming = q.is_swimming && !q.is_crawling; return (v.swim_amount <= 0.0) || !t.exclusively_swimming;" }
          ],
          "on_exit": [
            "v.swim_amount_exclusive = 0.0;"
          ]
        },
        "crawling": {
          "transitions": [
            { "default": "v.crawl_amount_exclusive = v.swim_amount; t.exclusively_crawling = !q.is_swimming && q.is_crawling; return (v.swim_amount <= 0.0) || !t.exclusively_crawling;" }
          ],
          "on_exit": [
            "v.crawl_amount_exclusive = 0.0;"
          ]
        }
      }
    },
    "controller.animation.player.compute_modified_swim_speed": {
      "initial_state": "default",
      "states": {
        "default": {
          "transitions": [
            { "is_fully_swimming_or_crawling": "v.swim_amount >= 1.0" }
          ]
        },
        "is_fully_swimming_or_crawling": {
          "on_entry": [
            "v.full_swim_distance_start = v.modified_distance_moved;"
          ],
          "transitions": [
            { "default": "v.full_swim_distance = v.modified_distance_moved - v.full_swim_distance_start; return (v.swim_amount < 1.0);" }
          ],
          "on_exit": [
            "v.full_swim_distance = 0.0;"
          ]
        }
      }
    },
    "controller.animation.player.swim_crawl": {
      "initial_state": "swim_or_crawl_easing",
      "states": {
        "swim_or_crawl_easing": {
          "animations":[
            { "swimming_other": "(v.swim_amount > 0.0) && (v.swim_amount < 1.0)" },
            { "swimming_arms_easing": "(v.swim_amount > 0.0) && (v.swim_amount < 1.0)" }
          ],
          "transitions": [
            { "swim_or_crawl_full": "v.swim_amount >= 1.0" }
          ]
        },
        "swim_or_crawl_full": {
          "animations": [
            "swimming_other",
            { "swimming_arms_full": "t.is_charging_trident = q.is_item_name_any('slot.weapon.mainhand', 'minecraft:trident') && (v.item_use_normalized > 0.0); return !t.is_charging_trident;" }
          ],
          "transitions": [
            { "swim_or_crawl_easing": "v.swim_amount < 1.0" }
          ]
        }
      }
    }
  }
}