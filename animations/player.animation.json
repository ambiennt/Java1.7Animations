{
	"format_version" : "1.8.0",
	"animations" : {
		"animation.player.attack.rotations" : {
			"loop" : true,
			"bones" : {
				"body" : {
					//"rotation" : [ 0.0, "variable.attack_body_rot_y", "(query.is_sneaking && !variable.sword_equipped) ? variable.attack_body_rot_y * -0.4 : 0" ]
					"rotation" : [ 0.0, "variable.attack_body_rot_y", "query.is_sneaking ? variable.attack_body_rot_y * -0.4 : 0" ]
				},
				"leftarm" : {
					"rotation" : [ "variable.attack_body_rot_y", 0.0, 0.0 ]
				},
				"rightarm" : {
					//exact implementation from java edition doesnt look the same in bedrock because variable.attack_time updates differently...
					//variable.attack_time -> math.pow(variable.attack_time, 0.85)
					"rotation" : [
						"math.sin(1 - (math.pow(1 - math.pow(variable.attack_time, 0.85), 3)) * 180) * 68.7549354157 + math.sin(math.pow(variable.attack_time, 0.85) * 180) * (query.head_x_rotation(0) - 40.1070456592) * 0.75",
						//"t.f1 = math.sin(1 - (math.pow(1 - v.attack_time, 3)) * 180); t.f2 = math.sin(v.attack_time * 180) * (q.head_x_rotation(0) - 40.1070456592) * 0.75; return t.f1 * 68.7549354157 + t.f2;",
						"variable.attack_body_rot_y * 2.0",
						"math.sin(variable.attack_time * 180) * -22.9183118052"
					]
				},
				"leftarm_custom" : {
					"rotation" : [ "variable.attack_body_rot_y", 0.0, 0.0 ]
				},
				"rightarm_custom" : {
					"rotation" : [
						"math.sin(1 - (math.pow(1 - math.pow(variable.attack_time, 0.85), 3)) * 180) * 68.7549354157 + math.sin(math.pow(variable.attack_time, 0.85) * 180) * (query.head_x_rotation(0) - 40.1070456592) * 0.75",
						"variable.attack_body_rot_y * 2.0",
						"math.sin(variable.attack_time * 180) * -22.9183118052"
					]
				}
			}
		},
		"animation.player.cape" : {
			"loop" : true,
			"bones" : {
				"ambient_cape" : {
					"position" : [ 0.0, "query.get_root_locator_offset('armor_offset.default_neck', 1)", 0.0 ],
					"rotation" : [
						"temp.oscillation_amount = (query.is_sneaking ? 0 : math.sin(variable.modified_distance_moved * 55.0) * 3.0 * (1.0 - variable.swim_amount) * variable.modified_move_speed); return ((query.time_stamp <= 0) ? -6.0 : (query.is_sleeping ? 0 : math.clamp((query.cape_flap_amount * -110.25) - temp.oscillation_amount - 0.75, -180.0, -1.5)));",
						"variable.relative_cape_rotation = ((query.is_in_ui || query.is_sleeping) ? 0 : (variable.modified_move_speed * (math.sqrt(variable.modified_move_speed) - math.sqrt(query.cape_flap_amount)) * math.sin(query.body_y_rotation - query.head_y_rotation(0)))); return variable.relative_cape_rotation * 60.0;",
						"variable.relative_cape_rotation * -45.0"
					]
				},
				"cape" : {
					"position" : [ 0.0, "query.get_root_locator_offset('armor_offset.default_neck', 1)", 0.0 ],
					"rotation" : [
						"temp.oscillation_amount = (query.is_sneaking ? 0 : math.sin(variable.modified_distance_moved * 55.0) * 3.0 * (1.0 - variable.swim_amount) * variable.modified_move_speed); return ((query.time_stamp <= 0) ? -6.0 : (query.is_sleeping ? 0 : math.clamp((query.cape_flap_amount * -110.25) - temp.oscillation_amount - 0.75, -180.0, -1.5)));",
						"variable.relative_cape_rotation * 60.0",
						"variable.relative_cape_rotation * -45.0"
					]
				}
			}
		},
		"animation.player.sneaking" : {
			"loop" : true,
			"bones" : {
				"body" : {
					"position" : [ 0.0, -2.2, 0.8 ]
				},
				"ambient_cape" : {
					"position" : [ 0.0, -2.2, 0.8 ]
				},
				"head" : {
					"position" : [ 0.0, -1.0, 0.0 ]
				},
				"leftarm" : {
					"rotation" : [ -5.7, 0.0, 0.0 ]
				},
				"leftleg" : {
					"rotation" : [ -28.0, 0.0, 0.0 ]
				},
				"rightarm" : {
					"rotation" : [ -5.7, 0.0, 0.0 ]
				},
				"rightleg" : {
					"rotation" : [ -28.0, 0.0, 0.0 ]
				},
				"root" : {
					"position" : [ 0.0, 1.25, 9.0 ],
					"rotation" : [ "28.0 - this", 0.0, 0.0 ]
				},
				"rightarm_custom" : {
					"rotation" : [ -5.7, 0.0, 0.0 ]
				},
				"leftarm_custom" : {
					"rotation" : [ -5.7, 0.0, 0.0 ]
				}
			}
		},
		"animation.player.bob" : {
      "loop" : true,
      "bones" : {
        "leftarm" : {
          "rotation" : [ "math.sin(query.life_time * 76.7763445475) * 2.86478897565", 0.0, "-((math.cos(query.life_time * 103.132403124) * 2.86478897565) + 2.86478897565)" ]
        },
        "rightarm" : {
          "rotation" : [ "-math.sin(query.life_time * 76.7763445475) * 2.86478897565", 0.0, "(math.cos(query.life_time * 103.132403124) * 2.86478897565) + 2.86478897565" ]
        },
        "leftarm_custom" : {
          "rotation" : [ "math.sin(query.life_time * 76.7763445475) * 2.86478897565", 0.0, "-((math.cos(query.life_time * 103.132403124) * 2.86478897565) + 2.86478897565)" ]
        },
        "rightarm_custom" : {
          "rotation" : [ "-math.sin(query.life_time * 76.7763445475) * 2.86478897565", 0.0, "(math.cos(query.life_time * 103.132403124) * 2.86478897565) + 2.86478897565" ]
        }
      }
    },
    "animation.player.holding" : {
			"loop" : true,
			"bones" : {
				"leftarm" : {
					"rotation" : [ "(variable.is_holding_left && (query.get_equipped_item_name == 'crossbow' || query.get_equipped_item_name == 'bow' ? !query.item_is_charged && variable.item_use_normalized <= 0.0f : 1.0) || (query.item_is_charged && variable.attack_time > 0.0f)) ? (-this * 0.5 - 18.0) : 0.0", 0.0, 0.0 ]
				},
				"rightarm" : {
					"rotation" : [ "variable.is_holding_right ? (-this * 0.5 - 18.0) : 0.0", 0.0, 0.0 ]
				},
				"leftarm_custom" : {
					"rotation" : [ "(variable.is_holding_left && (query.get_equipped_item_name == 'crossbow' || query.get_equipped_item_name == 'bow' ? !query.item_is_charged && variable.item_use_normalized <= 0.0f : 1.0) || (query.item_is_charged && variable.attack_time > 0.0f)) ? (-this * 0.5 - 18.0) : 0.0", 0.0, 0.0 ]
				},
				"rightarm_custom" : {
					"rotation" : [ "variable.is_holding_right ? (-this * 0.5 - 18.0) : 0.0", 0.0, 0.0 ]
				}
			}
		},
		"animation.player.move.arms" : {
			"loop" : true,
			"bones" : {
				"leftarm" : {
					"rotation" : [ "variable.tcos0 * (1.0 - variable.swim_amount)", 0.0, 0.0 ]
				},
				"rightarm" : {
					"rotation" : [ "-variable.tcos0 * (1.0 - variable.swim_amount)", 0.0, 0.0 ]
				},
				"leftarm_custom" : {
					"rotation" : [ "variable.tcos0 * (1.0 - variable.swim_amount)", 0.0, 0.0 ]
				},
				"rightarm_custom" : {
					"rotation" : [ "-variable.tcos0 * (1.0 - variable.swim_amount)", 0.0, 0.0 ]
				}
			}
		},
		"animation.player.move.legs" : {
			"loop" : true,
			"bones" : {
				"leftleg" : {
					"rotation" : [ "variable.tcos0 * -1.4 * (1.0 - variable.swim_amount)", 0.0, 0.0 ]
				},
				"rightleg" : {
					"rotation" : [ "variable.tcos0 * 1.4 * (1.0 - variable.swim_amount)", 0.0, 0.0 ]
				}
			}
		},
		"animation.player.riding.arms" : {
			"loop" : true,
			"bones" : {
				"leftarm" : {
					"rotation" : [ -36.0, 0.0, 0.0 ]
				},
				"rightarm" : {
					"rotation" : [ -36.0, 0.0, 0.0 ]
				},
				"leftarm_custom" : {
					"rotation" : [ -36.0, 0.0, 0.0 ]
				},
				"rightarm_custom" : {
					"rotation" : [ -36.0, 0.0, 0.0 ]
				}
			}
		},
		"animation.player.riding.legs" : {
			"loop" : true,
			"bones" : {
				"leftleg" : {
					"rotation" : [ "-72.0 - this", "-18.0 - this", "-this" ]
				},
				"rightleg" : {
					"rotation" : [ "-72.0 - this", "18.0 - this", "-this" ]
				}
			}
		},
		"animation.player.bow_equipped" : {
			"loop" : true,
			"bones" : {
				"leftarm" : {
					"rotation": [ "variable.item_use_normalized > 0.0f ? -90.0 + query.target_x_rotation - (query.is_sneaking * 20.0) : 0.0", "variable.item_use_normalized > 0.0f ? 27.5 + query.target_y_rotation : 0.0", 0.0 ]
				},
				"rightarm" : { // - 90.0 + 18.0
					"rotation": [ "variable.item_use_normalized > 0.0f ? -72.0 + query.target_x_rotation - (query.is_sneaking * 20.0) : 0.0", "variable.item_use_normalized > 0.0f ? -5.0 + query.target_y_rotation : 0.0", 0.0 ]
				},
				"leftarm_custom" : {
					"rotation": [ "variable.item_use_normalized > 0.0f ? -90.0 + query.target_x_rotation - (query.is_sneaking * 20.0) : 0.0", "variable.item_use_normalized > 0.0f ? 27.5 + query.target_y_rotation : 0.0", 0.0 ]
				},
				"rightarm_custom" : {
					"rotation": [ "variable.item_use_normalized > 0.0f ? -72.0 + query.target_x_rotation - (query.is_sneaking * 20.0) : 0.0", "variable.item_use_normalized > 0.0f ? -5.0 + query.target_y_rotation : 0.0", 0.0 ]
				}
			}
		},
		"animation.player.crossbow_equipped" : { // crossbow charging
			"loop" : true,
			"bones" : {
				"leftarm" : {
					"rotation" : [
						"-60.0 - (1.0 - variable.item_use_normalized) * 25.0",
						"15.0 + (1.0 - variable.item_use_normalized) * 35.0",
						"-5.0 + (1.0 - variable.item_use_normalized) * 10.0"
					]
				},
				"rightarm" : {
					"rotation" : [ -35.0, -45.0, 0.0 ]
				},
				"leftarm_custom" : {
					"rotation" : [
						"-60.0 - (1.0 - variable.item_use_normalized) * 25.0",
						"15.0 + (1.0 - variable.item_use_normalized) * 35.0",
						"-5.0 + (1.0 - variable.item_use_normalized) * 10.0"
					]
				},
				"rightarm_custom" : {
					"rotation" : [ -35.0, -45.0, 0.0 ]
				}
			}
		},
		"animation.player.crossbow_hold" : { // charged crossbow holding
			"loop" : true,
			"bones" : {
				"leftarm" : {
					"rotation" : [
						"-85.0 + query.target_x_rotation",
						"32.5 + math.clamp(query.target_y_rotation, -50.0, 50.0)",
						0.0
					]
				},
				"rightarm" : {
					"rotation" : [
						"-85.0 + query.target_x_rotation + 18",
						"math.clamp(query.target_y_rotation, -50.0, 50.0) - 17.5",
						0.0
					]
				},
				"leftarm_custom" : {
					"rotation" : [
						"-85.0 + query.target_x_rotation",
						"32.5 + math.clamp(query.target_y_rotation, -50.0, 50.0)",
						0.0
					]
				},
				"rightarm_custom" : {
					"rotation" : [
						"-85.0 + query.target_x_rotation",
						"math.clamp(query.target_y_rotation, -50.0, 50.0) - 17.5",
						0.0
					]
				}
			}
		},
		"animation.player.shield_block_main_hand" : {
			"loop" : true,
			"bones" : {
				"rightarm" : {
					"rotation" : [ -45.0, -30.0, 15.0 ]
				},
				"rightitem" : { // yes this should be in the shield attachable file but I dont want to add 2 new animations
					"position" : [ -1.5, -3.0, 1.5 ],
					"rotation" : [ -25.0, -30.0, -40.0 ]
				},
				"rightarm_custom" : {
					"rotation" : [ -45.0, -30.0, 15.0 ]
				}
			}
		},
		"animation.player.shield_block_off_hand" : {
			"loop" : true,
			"bones" : {
				"leftarm" : {
					"rotation" : [ -45.0, 30.0, -15.0 ]
				},
				"leftitem" : {
					"position" : [ 2.5, -1.0, 1.0 ],
					"rotation" : [ 155.0, 30.0, 40.0 ]
				},
				"leftarm_custom" : {
					"rotation" : [ -45.0, 30.0, -15.0 ]
				}
			}
		}
  }
}